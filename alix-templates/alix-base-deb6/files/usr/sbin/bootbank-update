#!/bin/sh

set -e

BOOTBANK_DEVICE=
BOOTBANK_LABEL=bootbank
BOOTBANK_MOUNT=/mnt/bootbank

domount=0
domakerw=0
rootdevice=
rootlabel=

test_bootbank () {
	if [ "${BOOTBANK_LABEL}" = "" ]; then
		echo "E: bootbank label not specified."
		return 1
	fi
	if [ "${BOOTBANK_MOUNT}" = "" ]; then
		echo "E: bootbank mountpoint not specified."
		return 1
	fi
	if [ ! -e /dev/disk/by-label/${BOOTBANK_LABEL} ]; then
		echo "E: bootbank device not found"
		return 1
	fi
	BOOTBANK_DEVICE=$(readlink -f /dev/disk/by-label/${BOOTBANK_LABEL})
	if [ "${BOOTBANK_DEVICE}" = "" ]; then
		echo "E: bootbank device not found"
		return 1
	fi
	if [ ! -d ${BOOTBANK_MOUNT} ]; then
		echo "E: bootbank mountpoint ${BOOTBANK_MOUNT} not found"
		return 1
	fi

	if [ "${rootdevice}" = "" ]; then
		# not preseeded
		rootdevice=$(df /  | awk 'NR == 2 {print $1}')
		if [ "${rootdevice}" = "" ]; then
			echo "E: cannot determine root device"
			return 1
		fi
		rootfsname=$(e2label ${rootdevice})
		if [ "${rootfsname}" = "" ]; then
			echo "E: cannot determine root device label"
			return 1
		fi
	fi

	# check what we have to do
	if grep "[[:space:]]${BOOTBANK_MOUNT}[[:space:]]" /proc/mounts > /dev/null 2> /dev/null; then
		if grep "[[:space:]]${BOOTBANK_MOUNT}[[:space:]]" /proc/mounts | grep "ro," > /dev/null 2> /dev/null; then
			domakerw=1
		fi
	else
		domount=1
	fi

	return 0
}

prepare_bb () {
	trap unprepare_bb INT QUIT TERM EXIT

	if [ $domount -eq 1 ]; then
		echo -n "P: mounting bootbank device..."
		mount ${BOOTBANK_DEVICE} ${BOOTBANK_MOUNT}
		echo " done."
	elif [ $domakerw -eq 1 ]; then
		echo -n "P: remounting bootbank device in writable mode..."
		mount -o remount,rw ${BOOTBANK_MOUNT}
		echo " done."
	fi
}

unprepare_bb () {
	trap - INT QUIT TERM EXIT
	if [ $domakerw -eq 1 ]; then
		echo -n "P: remounting bootbank device in read only mode..."
		mount -o remount,ro ${BOOTBANK_MOUNT}
		echo " done."
	elif [ $domount -eq 1 ]; then
		echo -n "P: unmounting bootbank device..."
		umount ${BOOTBANK_MOUNT}
		echo " done."
	fi
}

update_bb () {
	if [ -f /${1} ]; then
		if ! cmp -s /${1} ${BOOTBANK_MOUNT}/${rootfsname}/${1}; then
			if [ ! -d ${BOOTBANK_MOUNT}/${rootfsname} ]; then
				mkdir -p ${BOOTBANK_MOUNT}/${rootfsname}
			fi
			echo -n "P: updating ${1}..."
			cp /${1} ${BOOTBANK_MOUNT}/${rootfsname}/${1}
			echo " done."
		fi
	else
		if [ -f ${BOOTBANK_MOUNT}/${rootfsname}/${1} ]; then
			echo -n "P: removing ${1}..."
			rm -f ${BOOTBANK_MOUNT}/${rootfsname}/${1}
			echo " done."
		fi
	fi
}

# User is unprivileged
if [ "$(id -u)" -ne 0 ]; then
	echo "E: need root privileges"
	exit 1
fi

# Redirect stdout to stderr due Debconf usage
exec 1>&2

# Reading the default file
if [ -e /etc/default/bootbank ]; then
	. /etc/default/bootbank
fi
if [ -e /etc/default/bootbank-preseed ]; then
	. /etc/default/bootbank-preseed
fi

BOOTBANK_UPDATE="${BOOTBANK_UPDATE:-true}"

if [ "${BOOTBANK_UPDATE}" != "true" ]; then
	echo "P: bootbank-update is disabled in /etc/default/bootbank."
	exit 0
fi

# checking for bootbank environment
if ! test_bootbank; then
	exit 1
fi

prepare_bb

update_bb vmlinuz
update_bb initrd.img
update_bb vmlinuz.old
update_bb initrd.img.old

unprepare_bb
